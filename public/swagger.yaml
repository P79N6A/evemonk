swagger: '2.0'
info:
  title: 'EveMonk back-end API'
  description: 'EveMonk back-end REST API documentation'
  version: '0.1.0'
host: localhost:3000
schemes:
  - http
  - https
basePath: /api
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
tags:
  - name: signups
    description: Signups operations
  - name: sessions
    description: Session operations
  - name: api keys
    description: API Keys operations
paths:
  /signups:
    post:
      summary: Signup
      description: |
        Signup endpoint.
      parameters:
        - name: user[email]
          in: formData
          description: User email
          required: true
          type: string
        - name: user[password]
          in: formData
          description: User password
          required: true
          type: string
          format: password
        - name: user[password_confirmation]
          in: formData
          description: User password confirmation
          required: true
          type: string
          format: password
      tags:
        - signups
      responses:
        200:
          description: Account created
          schema:
            $ref: '#/definitions/OutputUser'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sessions:
    post:
      summary: Get user auth token
      description: |
        Signin user and return user with token.
      parameters:
        - name: session[email]
          in: formData
          description: User email
          required: true
          type: string
        - name: session[password]
          in: formData
          description: User password
          type: string
          format: password
      tags:
        - sessions
      responses:
        200:
          description: Response with User model with token
          schema:
            $ref: '#/definitions/OutputUser'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /api_keys:
    get:
      summary: Get list of User API Keys
      description: |
        Get list of User API Keys.
      parameters:
        - name: Authorization
          in: header
          description: 'User auth token. Example: Token token="value"'
          default: Token token="ACCESS_TOKEN"
          required: true
          type: string
        - name: page
          in: query
          description: Page number for pagination
          type: integer
          format: int64
      tags:
        - api keys
      responses:
        200:
          description: API Keys collection
          schema:
            $ref: '#/definitions/OutputApiKeyCollection'

definitions:
  OutputUser:
    required:
      - id
      - email
      - token
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: User ID. e.g. "42"
      email:
        type: string
        description: User email. e.g. "me@example.com"
      token:
        type: string
        description: User auth token. e.g. "AAkoMiLatQHMngyuUU1vnh5b"

  OutputApiKey:
    required:
      - id
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: ApiKey ID. e.g. "123"

  OutputApiKeyCollection:
    required:
      - collection
      - total_pages
      - current_page
    type: object
    properties:
      collection:
        type: array
        items:
          $ref: '#/definitions/OutputApiKey'
      total_pages:
        type: integer
        format: int64
        description: Total pages counter
      current_page:
        type: integer
        format: int64
        description: Current page number


  Error:
    type: object
    properties:
      errors:
        type: array
        items:
          type: string
          description: Error description
