version: '3.7'

volumes:
  postresql_data:
  redis_data:
  app_assets:
  app_packs:
  app_node_modules:
  elasticsearch_data:

services:
  nginx:
    image: 'nginx:1.14.2'
    restart: unless-stopped
    volumes:
      - 'app_assets:/app/public/assets'
      - 'app_packs:/app/public/packs'

  redis:
    image: 'redis:5.0.4'
    restart: unless-stopped
    volumes:
      - 'redis_data:/data'

  memcached:
    image: 'memcached:1.5.12'
    restart: unless-stopped
    command: memcached -m 64

  postgresql:
    image: 'postgres:11.2'
    restart: unless-stopped
    volumes:
      - 'postresql_data:/var/lib/postgresql/data'

  elasticsearch:
    image: 'elasticsearch:7.0.0'
    restart: unless-stopped
    volumes:
      - 'elasticsearch_data:/usr/share/elasticsearch/data'

  app: &app
    build: .
    restart: 'no'
    env_file: .env_docker
    volumes:
      - 'app_assets:/app/public/assets'
      - 'app_packs:/app/public/packs'
      - 'app_node_modules:/app/node_modules'

  migrations:
    <<: *app
    build: .
    restart: 'no'
    env_file: .env_docker
    command: wait-for-it elasticsearch:9200 --timeout=60 -- bundle exec rails db:migrate searchkick:reindex CLASS=Eve::Alliance
    depends_on:
      - elasticsearch

  backend:
    <<: *app
    restart: unless-stopped
    command: wait-for-it postgresql:5432 --timeout=60 -- bundle exec rails s -p 3000 -b '0.0.0.0'
    ports:
      - '3000:3000'
    depends_on:
      - redis
      - memcached
      - postgresql
      - elasticsearch

  sidekiq:
    <<: *app
    restart: unless-stopped
    command: wait-for-it postgresql:5432 --timeout=60 -- bundle exec sidekiq
    depends_on:
      - migrations
      - redis
      - memcached
      - postgresql
      - elasticsearch
